---
- name: Ensure hass container info gathered
  community.docker.docker_container_info:
    name: hass
  register: result

- name: Ensure hass backup dir exists
  ansible.builtin.file:
    path: "{{ backup_dir }}/hass"
    state: directory
    owner: "{{ homeplay_user }}"
    group: "{{ homeplay_user }}"
  delegate_to: "{{ backup_node }}"

- name: Ensure hass backup
  when: result.exists
  block:
    - name: Ensure hass database backup
      community.postgresql.postgresql_db:
        login_user: "{{ postgres_user }}"
        login_password: "{{ postgres_password }}"
        host: "{{ ansible_host }}"
        name: hass
        state: dump
        target: "{{ backup_dir }}/hass/{{ version }}-db.sql"
      become: true
      become_user: "{{ homeplay_user }}"
      delegate_to: "{{ backup_node }}"

    - name: Ensure hass config archived
      community.general.archive:
        path: "{{ hass_config_local_dir }}"
        dest: "/tmp/hass-config.tgz"

    - name: Ensure hass config backup
      ansible.posix.synchronize:
        src: "/tmp/hass-config.tgz"
        dest: "toni@10.0.0.12:/tank/backup/eros/hass/{{ version }}-config.tgz"
      delegate_to: "{{ inventory_hostname }}"
      become: true
      become_user: "{{ homeplay_user }}"
