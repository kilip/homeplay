---
- name: Ensure teleport vars configured
  ansible.builtin.include_vars: teleport.yml

- name: Ensure teleport service configured
  block:
    - name: Ensure teleport image pulled
      community.docker.docker_image:
        name: "{{ teleport_image }}"
        source: pull
        state: "{{ 'present' if teleport else 'absent' }}"

    - name: Ensure teleport persistence dir exists
      ansible.builtin.file:
        path: "/srv/teleport/{{ item }}"
        state: "{{ 'directory' if teleport else 'absent' }}"
      with_items:
        - config
        - data

    - name: Ensure teleport configuration copied
      ansible.builtin.copy:
        src: "tools/teleport.yaml"
        dest: "{{ teleport_dir }}/config/teleport.yaml"
        mode: "u=rw,g=r,o=r"
        state:
      notify: Restart teleport
      when: teleport

    - name: Ensure teleport config removed
      ansible.builtin.file:
        path: "tools/teleport.yaml"
        state: "absent"
      when: not teleport

    - name: Ensure teleport container configured
      community.docker.docker_container:
        state: "{{ 'started' if teleport else 'absent' }}"
        image_name_mismatch: recreate
        name: teleport
        image: "{{ teleport_image }}"
        restart_policy: always
        networks:
          - name: "{{ docker_network_name }}"
        volumes:
          - "{{ teleport_dir }}/config:/etc/teleport"
          - "{{ teleport_dir }}/data:/var/lib/teleport"
        ports:
          - 3080:3080
          - 3025:3025
        labels:
          dockerdns.pihole.cname.domain: "teleport.{{ traefik_domain }}"
          dockerdns.pihole.cname.target: "{{ full_hostname }}"
