---
- name: Ensure hass image pulled
  community.docker.docker_image:
    name: "{{ hass_image }}"
    source: pull

- name: Ensure hass config repository cloned
  ansible.builtin.git: # noqa: latest[git]
    repo: "{{ hass_config_repo }}"
    dest: "{{ hass_config_local_dir }}"
    clone: true
    accept_newhostkey: true
    key_file: "{{ hass_deploy_key }}"
    force: true
  when: hass_deploy_key and hass_config_repo

- name: Ensure hass db user configured
  community.postgresql.postgresql_user:
    user: "{{ hass_db_user }}"
    password: "{{ hass_db_password }}"
    host: localhost
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
    state: present
  when: not ansible_check_mode

- name: Ensure hass database configured
  community.postgresql.postgresql_db:
    name: "{{ hass_db_name }}"
    host: localhost
    owner: "{{ hass_db_user }}"
    login_user: "{{ postgres_user }}"
    login_password: "{{ postgres_password }}"
  when: not ansible_check_mode

- name: Ensure hass container configured
  community.docker.docker_container:
    state: started
    image_name_mismatch: recreate
    name: hass
    image: "{{ hass_image }}"
    env:
      AUTOMATION_ENABLED: "no"
      DB_CONNECTION: "postgresql://{{ hass_db_user }}:{{ hass_db_password }}@{{ hass_db_host }}:{{ hass_db_port }}/{{ hass_db_name }}"
      PGID: "1000"
      PUID: "1000"
      TZ: "Asia/Makassar"
    volumes:
      - "{{ hass_config_local_dir }}:/config"
    labels:
      traefik.enable: "true"
      traefik.http.routers.hass.entrypoints: websecure
      traefik.http.routers.hass.rule: "Host(`hass.{{ traefik_domain }}`)"
      traefik.http.services.hass.loadbalancer.server.port: "8123"
    networks:
      - name: "{{ docker_network_name }}"
    ports:
      - 8123:8123
    restart_policy: always
