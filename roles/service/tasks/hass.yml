---
- name: Ensure hass image pulled
  community.docker.docker_image:
    name: "{{ hass_image }}"
    source: pull

- name: Ensure hass config repository cloned
  ansible.builtin.git: # noqa: latest[git]
    repo: "{{ hass_config_repo }}"
    dest: "{{ hass_config_local_dir }}"
    clone: true
    accept_newhostkey: true
    key_file: "{{ hass_deploy_key }}"
    force: true
  when: hass_deploy_key and hass_config_repo

- name: Ensure hass db tasks configured
  ansible.builtin.include_tasks: hass-db.yml

- name: Ensure hass container configured
  community.docker.docker_container:
    state: started
    image_name_mismatch: recreate
    name: hass
    image: "{{ hass_image }}"
    capabilities:
      - NET_ADMIN
      - NET_RAW
    devices: "{{ hass_devices }}"
    env:
      AUTOMATION_ENABLED: "{{ 'yes' if hass_automation_enabled else 'no' }}"
      DB_CONNECTION: "postgresql://{{ hass_db_user }}:{{ hass_db_password }}@{{ hass_db_host }}:{{ hass_db_port }}/{{ hass_db_name }}"
      PGID: "1000"
      PUID: "1000"
      TZ: "Asia/Makassar"
    volumes:
      - "{{ hass_config_local_dir }}:/config"
    # labels:
    #   traefik.enable: "true"
    #   traefik.http.routers.hass.entrypoints: websecure
    #  traefik.http.routers.hass.rule: "Host(`hass.{{ traefik_domain }}`)"
    #   traefik.http.services.hass.loadbalancer.server.port: "8123"
    networks:
      - name: "{{ docker_network_name }}"
    ports:
      - 8123:8123
    restart_policy: always
