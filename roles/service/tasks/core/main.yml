---
- name: Ensure newrelic provisioned
  when: newrelic
  ansible.builtin.include_tasks:
    file: "newrelic.yml"
    apply:
      tags: newrelic
  tags: newrelic

- name: Ensure newrelic infra bundle configured
  community.docker.docker_container:
    name: newrelic.infra_bundle
    image: newrelic/infrastructure-bundle:latest
    state: started
    image_name_mismatch: recreate
    restart: "always"
    pid_mode: host
    detach: true
    volumes:
      - "/:/host:ro"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "/srv/newrelic-infra:/etc/newrelic-infra"
    env:
      NRIA_LICENSE_KEY: "{{ newrelic_license_key }}"

- name: Ensure mosquitto tasks included
  ansible.builtin.include_tasks:
    file: mosquitto.yml
    apply:
      tags: mosquitto
  tags: mosquitto
  when: mosquitto

- name: Ensure squid tasks included
  ansible.builtin.include_tasks:
    file: squid.yml
    apply:
      tags: squid
  tags: squid
  when: squid

- name: Ensure docker network created
  community.docker.docker_network:
    name: "{{ docker_network_name }}"
    driver: bridge
  tags: always

- name: Get docker network info
  community.docker.docker_network_info:
    name: "{{ docker_network_name }}"
  register: docker_net_stat
  tags: always

- name: Set docker network facts
  ansible.builtin.set_fact:
    docker_network_exists: docker_net_stat.exists
  tags: always

- name: Ensure pihole configured
  ansible.builtin.include_tasks:
    file: pihole.yml
    apply:
      tags: pihole
  tags: pihole

- name: Ensure traefik tasks included
  ansible.builtin.include_tasks:
    file: traefik.yml
    apply:
      tags: traefik
  tags: traefik

- name: Ensure tunnel tasks included
  ansible.builtin.include_tasks:
    file: tunnel.yml
    apply:
      tags: tunnel
  tags: tunnel
  when: tunnel

- name: Ensure dockerdns tasks included
  ansible.builtin.include_tasks:
    file: dockerdns.yml
    apply:
      tags: dockerdns
  tags: dockerdns
