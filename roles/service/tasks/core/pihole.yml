---
- name: Ensure pihole image pulled
  community.docker.docker_image:
    name: "{{ pihole_image }}"
    source: pull
  when: pihole

- name: Ensure pihole config dir exists
  when: pihole
  ansible.builtin.file:
    path: "{{ pihole_dir }}/{{ item }}"
    state: directory
  with_items:
    - dnsmasq.d
    - etc

- name: Ensure pihole dnsmasq.d files copied
  when: pihole
  ansible.builtin.copy:
    content: "{{ lookup('community.sops.sops', 'pihole/dnsmasq.d/' + item + '.sops') }}"
    dest: "{{ pihole_dir }}/dnsmasq.d/{{ item }}"
  loop:
    - 42-local-domain.conf
    - 99-k8s-gateway-forward.conf
  notify: Restart pihole dns

- name: Ensure pihole etc files copied
  when: pihole
  ansible.builtin.copy:
    content: "{{ lookup('community.sops.sops', 'pihole/etc/' + item + '.sops') }}"
    dest: "{{ pihole_dir }}/etc/{{ item }}"
  loop:
    - custom.list
  notify: Restart pihole dns

- name: Ensure pihole container configured
  when: pihole
  community.docker.docker_container:
    state: started
    image_name_mismatch: recreate
    name: pihole
    image: "{{ pihole_image }}"
    env: "{{ pihole_env }}"
    ports:
      - 53:53/tcp
      - 53:53/udp
    restart_policy: always
    networks:
      - name: "{{ docker_network_name }}"
    volumes:
      - /srv/pihole/dnsmasq.d:/etc/dnsmasq.d:rw
      - /srv/pihole/etc:/etc/pihole:rw
    labels:
      traefik.enable: "true"
      traefik.http.routers.pihole.entrypoints: websecure
      traefik.http.routers.pihole.rule: "Host(`pihole.{{ traefik_domain }}`)"
      traefik.http.services.pihole.loadbalancer.server.port: "80"

- name: Ensure pihole container removed
  when: not pihole
  community.docker.docker_container:
    name: pihole
    state: absent

- name: Ensure pihole cname configured
  ansible.builtin.include_tasks: pihole-cname.yml
  vars:
    cname_domain: "pihole.{{ traefik_domain }}"
    cname_target: "mars.lan"
  when: pihole
